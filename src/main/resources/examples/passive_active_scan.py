
# https://github.com/PortSwigger/burp-extensions-montoya-api-examples/blob/main/customscanchecks/src/main/java/example/customscanchecks/MyScanCheck.java
# https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/http/message/HttpRequestResponse.html
# https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/scanner/AuditResult.html

"""
    If nothing happens after running, it's possible the testing endpoint has been scanned. Please change to a different endpoint.
    
    curl -x http://127.0.0.1:8080/ "https://httpbin.org/base64/$(date '+%sPage generated by:' | base64 )"
"""
def passiveAudit(baseRequestResponse):

    responseHighlights = getResponseHighlights(baseRequestResponse, "Page generated by:")

    if not responseHighlights.isEmpty():
        return auditResult(auditIssue(
            "CMS Info Leakage",
            "The response contains the string 'Page generated by:'",
            "Remediation",
            baseRequestResponse.request().url(),
            AuditIssueSeverity.HIGH,
            AuditIssueConfidence.CERTAIN,
            "Background",
            "RemediationBackground",
            AuditIssueSeverity.MEDIUM,
            baseRequestResponse.withResponseMarkers(responseHighlights)))
    return None


def activeAudit(baseRequestResponse, auditInsertionPoint):

    checkRequest = auditInsertionPoint.buildHttpRequestWithPayload(bytearray("'")).withService(baseRequestResponse.httpService())
    checkRequestResponse = sendRequest(checkRequest)
    responseHighlights = getResponseHighlights(checkRequestResponse, "You have an error in your SQL syntax;")

    if not responseHighlights.isEmpty():
        return auditResult(auditIssue(
            "MysqlSQL Injection",
            "this is detail",
            "Remediation",
            baseRequestResponse.request().url(),
            AuditIssueSeverity.HIGH,
            AuditIssueConfidence.CERTAIN,
            "Background",
            "RemediationBackground",
            AuditIssueSeverity.MEDIUM,
            baseRequestResponse.withResponseMarkers(responseHighlights)))
    return None

